<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class VlanInterface extends \Entities\VlanInterface implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setIpv4enabled($ipv4enabled)
    {
        $this->__load();
        return parent::setIpv4enabled($ipv4enabled);
    }

    public function getIpv4enabled()
    {
        $this->__load();
        return parent::getIpv4enabled();
    }

    public function setIpv4hostname($ipv4hostname)
    {
        $this->__load();
        return parent::setIpv4hostname($ipv4hostname);
    }

    public function getIpv4hostname()
    {
        $this->__load();
        return parent::getIpv4hostname();
    }

    public function setIpv6enabled($ipv6enabled)
    {
        $this->__load();
        return parent::setIpv6enabled($ipv6enabled);
    }

    public function getIpv6enabled()
    {
        $this->__load();
        return parent::getIpv6enabled();
    }

    public function setIpv6hostname($ipv6hostname)
    {
        $this->__load();
        return parent::setIpv6hostname($ipv6hostname);
    }

    public function getIpv6hostname()
    {
        $this->__load();
        return parent::getIpv6hostname();
    }

    public function setMcastenabled($mcastenabled)
    {
        $this->__load();
        return parent::setMcastenabled($mcastenabled);
    }

    public function getMcastenabled()
    {
        $this->__load();
        return parent::getMcastenabled();
    }

    public function setIrrdbfilter($irrdbfilter)
    {
        $this->__load();
        return parent::setIrrdbfilter($irrdbfilter);
    }

    public function getIrrdbfilter()
    {
        $this->__load();
        return parent::getIrrdbfilter();
    }

    public function setBgpmd5secret($bgpmd5secret)
    {
        $this->__load();
        return parent::setBgpmd5secret($bgpmd5secret);
    }

    public function getBgpmd5secret()
    {
        $this->__load();
        return parent::getBgpmd5secret();
    }

    public function setIpv4bgpmd5secret($ipv4bgpmd5secret)
    {
        $this->__load();
        return parent::setIpv4bgpmd5secret($ipv4bgpmd5secret);
    }

    public function getIpv4bgpmd5secret()
    {
        $this->__load();
        return parent::getIpv4bgpmd5secret();
    }

    public function setIpv6bgpmd5secret($ipv6bgpmd5secret)
    {
        $this->__load();
        return parent::setIpv6bgpmd5secret($ipv6bgpmd5secret);
    }

    public function getIpv6bgpmd5secret()
    {
        $this->__load();
        return parent::getIpv6bgpmd5secret();
    }

    public function setMaxbgpprefix($maxbgpprefix)
    {
        $this->__load();
        return parent::setMaxbgpprefix($maxbgpprefix);
    }

    public function getMaxbgpprefix()
    {
        $this->__load();
        return parent::getMaxbgpprefix();
    }

    public function setRsclient($rsclient)
    {
        $this->__load();
        return parent::setRsclient($rsclient);
    }

    public function getRsclient()
    {
        $this->__load();
        return parent::getRsclient();
    }

    public function setIpv4canping($ipv4canping)
    {
        $this->__load();
        return parent::setIpv4canping($ipv4canping);
    }

    public function getIpv4canping()
    {
        $this->__load();
        return parent::getIpv4canping();
    }

    public function setIpv6canping($ipv6canping)
    {
        $this->__load();
        return parent::setIpv6canping($ipv6canping);
    }

    public function getIpv6canping()
    {
        $this->__load();
        return parent::getIpv6canping();
    }

    public function setIpv4monitorrcbgp($ipv4monitorrcbgp)
    {
        $this->__load();
        return parent::setIpv4monitorrcbgp($ipv4monitorrcbgp);
    }

    public function getIpv4monitorrcbgp()
    {
        $this->__load();
        return parent::getIpv4monitorrcbgp();
    }

    public function setIpv6monitorrcbgp($ipv6monitorrcbgp)
    {
        $this->__load();
        return parent::setIpv6monitorrcbgp($ipv6monitorrcbgp);
    }

    public function getIpv6monitorrcbgp()
    {
        $this->__load();
        return parent::getIpv6monitorrcbgp();
    }

    public function setAs112client($as112client)
    {
        $this->__load();
        return parent::setAs112client($as112client);
    }

    public function getAs112client()
    {
        $this->__load();
        return parent::getAs112client();
    }

    public function setBusyhost($busyhost)
    {
        $this->__load();
        return parent::setBusyhost($busyhost);
    }

    public function getBusyhost()
    {
        $this->__load();
        return parent::getBusyhost();
    }

    public function setNotes($notes)
    {
        $this->__load();
        return parent::setNotes($notes);
    }

    public function getNotes()
    {
        $this->__load();
        return parent::getNotes();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setIPv4Address(\Entities\IPv4Address $iPv4Address = NULL)
    {
        $this->__load();
        return parent::setIPv4Address($iPv4Address);
    }

    public function getIPv4Address()
    {
        $this->__load();
        return parent::getIPv4Address();
    }

    public function setIPv6Address(\Entities\IPv6Address $iPv6Address = NULL)
    {
        $this->__load();
        return parent::setIPv6Address($iPv6Address);
    }

    public function getIPv6Address()
    {
        $this->__load();
        return parent::getIPv6Address();
    }

    public function setVirtualInterface(\Entities\VirtualInterface $virtualInterface = NULL)
    {
        $this->__load();
        return parent::setVirtualInterface($virtualInterface);
    }

    public function getVirtualInterface()
    {
        $this->__load();
        return parent::getVirtualInterface();
    }

    public function setVlan(\Entities\Vlan $vlan = NULL)
    {
        $this->__load();
        return parent::setVlan($vlan);
    }

    public function getVlan()
    {
        $this->__load();
        return parent::getVlan();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'ipv4enabled', 'ipv4hostname', 'ipv6enabled', 'ipv6hostname', 'mcastenabled', 'irrdbfilter', 'bgpmd5secret', 'ipv4bgpmd5secret', 'ipv6bgpmd5secret', 'maxbgpprefix', 'rsclient', 'ipv4canping', 'ipv6canping', 'ipv4monitorrcbgp', 'ipv6monitorrcbgp', 'as112client', 'busyhost', 'notes', 'id', 'IPv4Address', 'IPv6Address', 'VirtualInterface', 'Vlan');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}