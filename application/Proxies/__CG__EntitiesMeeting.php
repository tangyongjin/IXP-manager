<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Meeting extends \Entities\Meeting implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setBeforeText($beforeText)
    {
        $this->__load();
        return parent::setBeforeText($beforeText);
    }

    public function getBeforeText()
    {
        $this->__load();
        return parent::getBeforeText();
    }

    public function setAfterText($afterText)
    {
        $this->__load();
        return parent::setAfterText($afterText);
    }

    public function getAfterText()
    {
        $this->__load();
        return parent::getAfterText();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setTime($time)
    {
        $this->__load();
        return parent::setTime($time);
    }

    public function getTime()
    {
        $this->__load();
        return parent::getTime();
    }

    public function setVenue($venue)
    {
        $this->__load();
        return parent::setVenue($venue);
    }

    public function getVenue()
    {
        $this->__load();
        return parent::getVenue();
    }

    public function setVenueUrl($venueUrl)
    {
        $this->__load();
        return parent::setVenueUrl($venueUrl);
    }

    public function getVenueUrl()
    {
        $this->__load();
        return parent::getVenueUrl();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedBy($updatedBy)
    {
        $this->__load();
        return parent::setUpdatedBy($updatedBy);
    }

    public function getUpdatedBy()
    {
        $this->__load();
        return parent::getUpdatedBy();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function addMeetingItem(\Entities\MeetingItem $meetingItems)
    {
        $this->__load();
        return parent::addMeetingItem($meetingItems);
    }

    public function removeMeetingItem(\Entities\MeetingItem $meetingItems)
    {
        $this->__load();
        return parent::removeMeetingItem($meetingItems);
    }

    public function getMeetingItems()
    {
        $this->__load();
        return parent::getMeetingItems();
    }

    public function setCreatedBy(\Entities\User $createdBy = NULL)
    {
        $this->__load();
        return parent::setCreatedBy($createdBy);
    }

    public function getCreatedBy()
    {
        $this->__load();
        return parent::getCreatedBy();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'title', 'before_text', 'after_text', 'date', 'time', 'venue', 'venue_url', 'created_at', 'updated_by', 'updated_at', 'id', 'MeetingItems', 'CreatedBy');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}