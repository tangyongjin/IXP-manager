{*
    MRTG Configuration Templates

    Please see: https://github.com/inex/IXP-Manager/wiki/MRTG---Traffic-Graphs

    You should not need to edit these files - instead use your own custom skins. If
    you can't effect the changes you need with skinning, consider posting to the mailing
    list to see if it can be achieved / incorporated.

    Skinning: https://github.com/inex/IXP-Manager/wiki/Skinning

*}

########################################################################################
### LAG Aggregate for {$c->getAbbreviatedName()} - Virtual Interface ID {$vi->getId()}
###
### Ports:
{foreach $vi->getPhysicalInterfaces() as $pi}
### {$pi->getSwitchPort()->getSwitcher()->getName()}:{$pi->getSwitchPort()->getName()}
{/foreach}
###


{$tag    = "`$c->getShortname()`-lag-viid-`$vi->getId()`"}

{if isset( $custLagPorts.bits ) and count( $custLagPorts.bits )}
# {$c->getName()} - {$tag} - aggregate bits in/out
Target[{$tag}-bits]: {$custLagPorts.bits|implode:' + '}
MaxBytes[{$tag}-bits]: {$custLagPortsAggregateSpeed * 1000000 / 8}
Directory[{$tag}-bits]: members/{$c->getShortname()}
Title[{$tag}-bits]: {$c->getAbbreviatedName()} -- aggregate bits in/out
{/if}

{if isset( $custLagPorts.packets ) and count( $custLagPorts.packets )}
# {$c->getName()} - {$tag} - aggregate packets in/out
Target[{$tag}-pkts]: {$custLagPorts.packets|implode:' + '}
MaxBytes[{$tag}-pkts]: {round( $custLagPortsAggregateSpeed * 1000000 / 8 / 64 )}
Directory[{$tag}-pkts]: members/{$c->getShortname()}
Options[{$tag}-pkts]: growright
YLegend[{$tag}-pkts]: Packets/Second
Title[{$tag}-pkts]: {$c->getAbbreviatedName()} -- aggregate packets in/out
{/if}

{if isset( $custLagPorts.errors ) and count( $custLagPorts.errors )}
# {$c->getName()} - {$tag} - aggregate errors in/out
Target[{$tag}-errs]: {$custLagPorts.errors|implode:' + '}
MaxBytes[{$tag}-errs]: {round( $custLagPortsAggregateSpeed * 1000000 / 8 / 64 )}
Directory[{$tag}-errs]: members/{$c->getShortname()}
Options[{$tag}-errs]: growright
YLegend[{$tag}-errs]: Errors/Second
Title[{$tag}-errs]: {$c->getAbbreviatedName()} -- aggregate errors in/out
{/if}

{if isset( $custLagPorts.discards ) and count( $custLagPorts.discards )}
# {$c->getName()} - {$tag} - aggregate discards in/out
Target[{$tag}-discs]: {$custLagPorts.discards|implode:' + '}
MaxBytes[{$tag}-discs]: {round( $custLagPortsAggregateSpeed * 1000000 / 8 / 64) }
Directory[{$tag}-discs]: members/{$c->getShortname()}
Options[{$tag}-discs]: growright
YLegend[{$tag}-discs]: Discards/Second
Title[{$tag}-discs]: {$c->getAbbreviatedName()} -- aggregate discards in/out
{/if}
