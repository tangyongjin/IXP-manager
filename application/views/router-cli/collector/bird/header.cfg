{*
    Bird Route Collector Configuration Template
    
    A config similar to this is used by INEX for the route collector on our
    quarantine VLAN which members must peer with before new connections are 
    allowed onto the production peering LANs.

    Please see: https://github.com/inex/IXP-Manager/wiki/Route-Collector

    You should not need to edit these files - instead use your own custom skins. If
    you can't effect the changes you need with skinning, consider posting to the mailing
    list to see if it can be achieved / incorporated. 

    Skinning: https://github.com/inex/IXP-Manager/wiki/Skinning
    
*}

# Bird Quarantine Route Collector configuration generated by IXP Manager
#
# Do not edit this file, it will be overwritten. Please see:
#
# https://github.com/inex/IXP-Manager/wiki/Route-Collector
#
# Generated: {$smarty.now|date_format:'Y-m-d H:i:s'}
#

# For VLAN: {$vlan->getName()} (Tag: {$vlan->getNumber()}, Database ID: {$vlan->getId()})

log "{#rsconfLogfile#}" all;                                                                                                                                                                      
log syslog all;                                                                                                                                                                                                    
                                                                                                                                                                                                                   
define routerasn     = {#rsconfASN#};
define routeraddress = {#rsconfListenAddr#};

router id {#rsconfRouterID#};
listen bgp address routeraddress;

# ignore interface up/down events
protocol device { }

# These function excludes weird networks
#  rfc1918, class D, class E, too long and too short prefixes

{if not $protocol or $protocol eq 4}

function avoid_martians_v4()
prefix set martiansv4;
{
        # This list of martians is obtained from the IANA IPv4
        # Special-Purpose Address Registry:
        # http://www.iana.org/assignments/iana-ipv4-special-registry
        martiansv4 = [
                10.0.0.0/8+,            # RFC1918 - Private use
                100.64.0.0/10+,         # RFC6598 - Shared address space
                127.0.0.0/8+,           # RFC1122 - Loopback
                169.254.0.0/16+,        # RFC3927 - Link-local
                172.16.0.0/12+,         # RFC1918 - Private use
                192.0.0.0/24+,          # multiple RFCs
                192.0.2.0/24+,          # RFC5737 - Documentation - TEST-NET-1
                192.168.0.0/16+,        # RFC1918 - Private use
                198.18.0.0/15+,         # RFC2544 - Benchmarking
                198.51.100.0/24+,       # RFC5737 - Documentation - TEST-NET-2
                203.0.113.0/24+,        # RFC5737 - Documentation - TEST-NET-3
                224.0.0.0/4+,           # RFC3171 - Multicast
                240.0.0.0/4+,           # RFC1112 - Reserved
                0.0.0.0/32-,
                0.0.0.0/0{ldelim}25,32{rdelim},
                0.0.0.0/0{ldelim}0,7{rdelim}
        ];

        # Avoid RFC1918 and similar networks
        if net ~ martiansv4 then
                return false;

        return true;
}

filter f_import_policy_v4
{
        if !(avoid_martians_v4()) then
                reject;

        accept;
}

{/if}
{if not $protocol or $protocol eq 6}

function avoid_martians_v6()
prefix set martiansv6;
{
        # This list of martians is obtained from the IANA IPv6
        # Special-Purpose Address Registry:
        # http://www.iana.org/assignments/iana-ipv6-special-registry
        martiansv6 = [
                ::/0,                   # Default (can be advertised as a route in BGP to peers if desired)
                ::/96,                  # IPv4-compatible IPv6 address - deprecated by RFC4291
                ::/128,                 # Unspecified address
                ::1/128,                # Local host loopback address
                ::ffff:0.0.0.0/96+,     # IPv4-mapped addresses
                ::224.0.0.0/100+,       # Compatible address (IPv4 format)
                ::127.0.0.0/104+,       # Compatible address (IPv4 format)
                ::0.0.0.0/104+,         # Compatible address (IPv4 format)
                ::255.0.0.0/104+,       # Compatible address (IPv4 format)
                0000::/8+,              # Pool used for unspecified, loopback and embedded IPv4 addresses
                0100::/64+,             # RFC6666 - discard-only address block
                0200::/7+,              # RFC4548 - OSI NSAP-mapped prefix set, deprecated by RFC4048
                3ffe::/16+,             # Former 6bone, now decommissioned
                2001:2::/48+,           # RFC5180 - Benchmarking
                2001:10::/28+,          # RFC4843 - ORCHID
                2001:db8::/32+,         # RFC3849 - Reserved by IANA for special purposes and documentation
                2002:e000::/20+,        # Invalid 6to4 packets (IPv4 multicast)
                2002:7f00::/24+,        # Invalid 6to4 packets (IPv4 loopback)
                2002:0000::/24+,        # Invalid 6to4 packets (IPv4 default)
                2002:ff00::/24+,        # Invalid 6to4 packets
                2002:0a00::/24+,        # Invalid 6to4 packets (IPv4 private 10.0.0.0/8 network)
                2002:ac10::/28+,        # Invalid 6to4 packets (IPv4 private 172.16.0.0/12 network)
                2002:c0a8::/32+,        # Invalid 6to4 packets (IPv4 private 192.168.0.0/16 network)
                fc00::/7+,              # RFC4193 - Unicast Unique Local Addresses (ULA)
                fe80::/10+,             # Link-local Unicast
                fec0::/10+,             # Site-local Unicast - deprecated by RFC 3879 (replaced by ULA)
                ff00::/8+               # Multicast
        ];
     
        # Avoid RFC1918 and similar networks
        if net ~ martiansv6 then
                return false;

        return true;
}

filter f_import_policy_v6
{
        if !(avoid_martians_v6()) then
                reject;

        accept;
}

{/if}

##
## Route collector client configuration
##



