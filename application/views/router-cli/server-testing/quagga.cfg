
! Quagga Route Server Client Testing configuration generated by IXP Manager
!
! Do not edit this file, it will be overwritten. Please see:
!
! https://github.com/inex/IXP-Manager/wiki/Route-Server-Testing
!
! Generated: {$smarty.now|date_format:'Y-m-d H:i:s'}
!
!
! For: {$int.cname} - {$int.address} - {$int.autsys}
!
! For VLAN: {$vlan->getName()} (Tag: {$vlan->getNumber()}, Database ID: {$vlan->getId()})
!

hostname {$int.cshortname}
password {#rsclientconfPassword#}
enable password {#rsclientconfEnablePassword#}                                                                                                                                                                                    

log monitor informational
!
router bgp {$int.autsys}
{if $proto eq 4}
 bgp router-id {$int.address}
{else}
 bgp router-id 10.{math equation="rand( 0, 255 )"}.{math equation="rand( 0, 255 )"}.{math equation="rand( 0, 255 )"}
{/if}

 address-family ipv{$proto} unicast
{foreach $prefixes as $p}
  network {$p.prefix}
{/foreach}
 exit-address-family

{$seq = array( 1, 2, 3, 4, 5 )}
{foreach $seq as $i}

 {$rsAddrKey = 'rsconfListenAddr'|cat:$i}
 
{if isset( $smarty.config.$rsAddrKey )}
    {$rsAddr = $smarty.config.$rsAddrKey}
{else}
    {continue}
{/if}

 neighbor {$rsAddr} remote-as {#rsconfASN#}
 neighbor {$rsAddr} description Route Server {$i}
 neighbor {$rsAddr} update-source {$int.address}  

{if $int.bgpmd5secret}
 neighbor {$rsAddr} password {$int.bgpmd5secret}
{else}
 no neighbor {$rsAddr} password
{/if}
 
 address-family ipv4
{if $proto eq 4}
   neighbor {$rsAddr} activate
   neighbor {$rsAddr} soft-reconfiguration inbound
   neighbor {$rsAddr} route-map rsclient-as{$int.autsys}-ipv{$proto}-out out
{else}
   no neighbor {$rsAddr} activate
{/if}
 exit-address-family

 address-family ipv6
{if $proto eq 4}
   no neighbor {$rsAddr} activate
{else}
   neighbor {$rsAddr} activate
   neighbor {$rsAddr} soft-reconfiguration inbound
   neighbor {$rsAddr} route-map rsclient-as{$int.autsys}-ipv{$proto}-out out
{/if}
 exit-address-family

 address-family vpnv4
  no neighbor {$rsAddr} activate
 exit-address-family

{/foreach}

 exit

 
{foreach $prefixes as $p}
ip{if $proto eq 6}v6{/if} prefix-list {if $proto eq 6}ipv6-{/if}pl{$int.autsys} permit {$p.prefix}
{/foreach}
!
route-map rsclient-as{$int.autsys}-ipv{$proto}-out permit 1
 match ip{if $proto eq 6}v6{/if} address prefix-list {if $proto eq 6}ipv6-{/if}pl{$int.autsys}
exit


!
line vty
!
