

ip community-list standard cl-ixp-as{$int.autsys}-import deny 0:{$int.autsys}
ip community-list standard cl-ixp-as{$int.autsys}-import permit {#rsconfASN#}:{$int.autsys}
ip community-list standard cl-ixp-as{$int.autsys}-import deny 0:{#rsconfASN#}
ip community-list standard cl-ixp-as{$int.autsys}-import permit

! Match standard community list above
{if not $testmode}
no route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-import
{/if}
route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-import permit 10
 match community cl-ixp-as{$int.autsys}-import

 
router bgp {#rsconfASN#}
 neighbor {$int.address} remote-as {$int.autsys}
 neighbor {$int.address} description {$int.cname}
 neighbor {$int.address} update-source {#rsconfListenAddr#} 
{if $int.bgpmd5secret}
 neighbor {$int.address} password {$int.bgpmd5secret}
{else}
 no neighbor {$int.address} password
{/if}
 
 address-family ipv4
{if $proto eq 4}
   neighbor {$int.address} activate
   neighbor {$int.address} route-server-client
   neighbor {$int.address} send-community both
   neighbor {$int.address} soft-reconfiguration inbound
   neighbor {$int.address} route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-import import
{else}
   no neighbor {$int.address} activate
{/if}
 exit-address-family

 address-family ipv6
{if $proto eq 4}
   no neighbor {$int.address} activate
{else}
   neighbor {$int.address} activate
   neighbor {$int.address} route-server-client
   neighbor {$int.address} send-community both
   neighbor {$int.address} soft-reconfiguration inbound
   neighbor {$int.address} route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-import import
{/if}
 exit-address-family

 address-family vpnv4
  no neighbor {$int.address} activate
 exit-address-family
 
 exit

 
{if not $testmode}
no ip{if $proto eq 6}v6{/if} prefix-list {if $proto eq 6}ipv6-{/if}pl{$int.autsys}
{/if}

{foreach $prefixes as $p}
ip{if $proto eq 6}v6{/if} prefix-list {if $proto eq 6}ipv6-{/if}pl{$int.autsys} permit {$p.prefix}
{/foreach}

ip{if $proto eq 6}v6{/if} prefix-list {if $proto eq 6}ipv6-{/if}pl{$int.autsys} description IRRDB prefilter for AS{$int.autsys} - {$int.cname}
!
{if not $testmode}
no route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-export
{/if}
!
route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-export permit 1
 match ip{if $proto eq 6}v6{/if} address prefix-list {if $proto eq 6}ipv6-{/if}pl{$int.autsys}
exit
!
router bgp {#rsconfASN#}
  address-family ipv{$proto}
   neighbor {$int.address} route-map ixp-rsclient-as{$int.autsys}-ipv{$proto}-export export
  exit-address-family
 exit






