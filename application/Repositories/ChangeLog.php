<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * ChangeLog
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChangeLog extends EntityRepository
{
    /**
     *
     * OLD DOCTRINE1 CODE FOR PORTING
     *
     *
     *
     * Get updates for a user from a given date
     *
     * @param $priv int The privilege level to check for (and lesser privileges)
         * @param $dateFrom string The date and time (YYYY-MM-DD HH:MM:SS) from when to search the change log or false to indicate 'from the start'
     * @param $hydrateMethod int The Doctrine hydration method (defaults to HYDRATE_RECORD)
     * @return array An array of associate records or Doctrine objects
     *
    public static function getUpdates( $priv = 0, $dateFrom = false, $hydrateMethod = Doctrine_Core::HYDRATE_RECORD )
    {
        $entries = Doctrine_Query::create()
        ->select( 'cl.*' )
        ->addSelect( 'u.username' )
        ->from( 'ChangeLog cl' )
        ->leftJoin( 'cl.User u' )
        ->where( 'cl.visibility <= ?', $priv )
        ->orderBy( 'cl.livedate DESC' );
    
        if( $dateFrom !== false )
            $entries->andWhere( 'cl.created_at >= ?', $dateFrom );
    
        return $entries->execute( null, $hydrateMethod );
    }
    
    /**
     * Does the given user have unseen updates on the change log?
     *
     * @param $priv int The privilege level to check for (and lesser privileges)
         * @param $dateFrom string The date and time (YYYY-MM-DD HH:MM:SS) from when to search the change log or false to indicate 'from the start'
     * @return int The number of entries available (0 can be used to evalaute as false, >0 for true)
     *
    public static function hasUpdates( $priv = 0, $dateFrom = false )
    {
        $count = Doctrine_Query::create()
        ->select( 'COUNT(cl.id)' )
        ->from( 'ChangeLog cl' )
        ->where( 'cl.visibility <= ?', $priv );
    
        if( $dateFrom !== false )
            $count->andWhere( 'cl.created_at >= ?', $dateFrom );
    
        return $count->fetchOne( null, Doctrine_Core::HYDRATE_SINGLE_SCALAR );
    }
    */
}
