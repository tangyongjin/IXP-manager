
# Bird Route Server configuration generated by IXP Manager
#
# Do not edit this file, it will be overwritten. Please see:
#
# https://github.com/inex/IXP-Manager/wiki/Route-Server
#
# Generated: 2014-12-15 14:22:12
#

# For VLAN: Peering LAN 2 (Tag: 2, Database ID: 2)


log "/var/log/bird/bgpd-rs1-vlan2-ipv4.log" all;
log syslog all;

define routeserverasn = 43760;
define routeserveraddress = 10.2.0.8;

router id 10.2.0.8;
listen bgp address 10.2.0.8;

# ignore interface up/down events
protocol device { }

# This function excludes weird networks
#  rfc1918, class D, class E, too long and too short prefixes
function avoid_martians()
prefix set martians;
{
    
        martians = [
                10.0.0.0/8+,
                169.254.0.0/16+,
                172.16.0.0/12+,
                192.0.0.0/24+,
                192.0.2.0/24+,
                192.168.0.0/16+,
                198.18.0.0/15+,
                198.51.100.0/24+,
                203.0.113.0/24+,
                224.0.0.0/4+,
                240.0.0.0/4+,
                0.0.0.0/32-,
                0.0.0.0/0{25,32},
                0.0.0.0/0{0,7}
        ];

     
        # Avoid RFC1918 and similar networks
        if net ~ martians then
                return false;

        return true;
}

##
## Standard IXP community filter
##

function ixp_community_filter(int peerasn)
{
        if !(source = RTS_BGP) then
                return false;

        # default community filtering schema doesn't support ASN32, as there
        # are only 6 octets available for numbering.  We need
        # draft-raszuk-wide-bgp-communities to become reality.

        if peerasn > 65535 then
                return true;

        # Implement widely used community filtering schema.
        if (0, peerasn) ~ bgp_community then
                return false;
        if (routeserverasn, peerasn) ~ bgp_community then
                return true;
        if (0, routeserverasn) ~ bgp_community then
                return false;

        return true;
}

##
## Route Server client configuration
##

template bgp tb_rsclient {
        local as routeserverasn;
        source address routeserveraddress;
        import filter {
                ## Prevent BGP NEXT_HOP Hijacking
                if !( from = bgp_next_hop ) then
                    reject "BGP neighbor address [", from, "] != next hop address [", bgp_next_hop, "]", ", net:[", net, "], path:[", bgp_path, "]";
                    
                accept;
        };
        export all;
        rs client;
        
}




### AS112 - AS112 - VLAN Interface #5
table t_0005_as112;


filter f_import_0005_as112
prefix set allnet;
int set allas;
{
        if !(avoid_martians()) then
                reject;

        # Route servers peering with route servers will cause the universe
        # to collapse.  Recommend evasive manoeuvers.
        if (bgp_path.first != 112 ) then
                reject;
 

        allas = [ 112  ];

        if !(bgp_path.last ~ allas) then
               reject;
               
        allnet = [ 192.175.48.0/24  ];

        if ! (net ~ allnet) then
                reject;

        accept;
}

protocol pipe pp_0005_as112 {
        description "Pipe for AS112 - AS112 - VLAN Interface 5";
        table master;
        mode transparent;
        peer table t_0005_as112;
        import filter f_import_0005_as112;
        export where ixp_community_filter(112);
}

protocol bgp pb_0005_as112 from tb_rsclient {
        description "RIB for AS112 - AS112 - VLAN Interface 5";
        neighbor 10.2.0.6 as 112;
        route limit 20;
        table t_0005_as112;
        password "Pz8VYMNwEdCjKz68";        
}


### AS1213 - HEAnet - VLAN Interface #2
table t_0002_as1213;


filter f_import_0002_as1213
prefix set allnet;
int set allas;
{
        if !(avoid_martians()) then
                reject;

        # Route servers peering with route servers will cause the universe
        # to collapse.  Recommend evasive manoeuvers.
        if (bgp_path.first != 1213 ) then
                reject;
 

        allas = [ 112, 1213, 1921, 2128, 2850, 42310  ];

        if !(bgp_path.last ~ allas) then
               reject;
               
        allnet = [ 134.226.0.0/16, 136.201.0.0/16, 136.206.0.0/16, 137.43.0.0/16, 140.203.0.0/16, 143.239.0.0/16, 147.252.0.0/16, 149.153.0.0/16, 149.157.0.0/16, 157.190.0.0/16, 160.6.0.0/16, 176.97.158.0/24, 192.174.68.0/24, 192.175.48.0/24, 193.1.0.0/16, 193.242.111.0/24, 194.0.24.0/24, 194.0.25.0/24, 194.0.26.0/24, 194.88.240.0/23, 212.3.242.128/26, 4.53.146.192/26, 4.53.84.128/26, 77.72.72.0/21, 87.32.0.0/12, 91.123.224.0/20  ];

        if ! (net ~ allnet) then
                reject;

        accept;
}

protocol pipe pp_0002_as1213 {
        description "Pipe for AS1213 - HEAnet - VLAN Interface 2";
        table master;
        mode transparent;
        peer table t_0002_as1213;
        import filter f_import_0002_as1213;
        export where ixp_community_filter(1213);
}

protocol bgp pb_0002_as1213 from tb_rsclient {
        description "RIB for AS1213 - HEAnet - VLAN Interface 2";
        neighbor 10.2.0.11 as 1213;
        route limit 1000;
        table t_0002_as1213;
        password "u5zSNJLAVT87RGXQ";        
}


### AS25441 - Imagine - VLAN Interface #7
table t_0007_as25441;


filter f_import_0007_as25441
prefix set allnet;
int set allas;
{
        if !(avoid_martians()) then
                reject;

        # Route servers peering with route servers will cause the universe
        # to collapse.  Recommend evasive manoeuvers.
        if (bgp_path.first != 25441 ) then
                reject;
 

        allas = [ 11521, 25441, 34317, 35272, 39064, 43178, 43610, 47615, 48342, 49573,                   
                  197853, 197904  ];

        if !(bgp_path.last ~ allas) then
               reject;
               
        allnet = [ 141.105.112.0/21, 176.52.216.0/21, 195.5.172.0/24, 195.60.166.0/23, 216.245.44.0/24, 31.169.96.0/21, 62.231.32.0/19, 78.135.128.0/17, 83.141.64.0/18, 85.134.128.0/17, 87.192.0.0/16, 87.232.0.0/16, 89.124.0.0/14, 89.124.0.0/15, 89.125.0.0/16, 89.126.0.0/16, 89.126.0.0/19, 89.126.0.0/20, 89.126.32.0/19, 89.126.64.0/19, 89.126.96.0/19, 89.28.176.0/21, 91.194.126.0/23, 91.194.126.0/24, 91.194.127.0/24, 91.209.106.0/24, 91.209.106.0/25, 91.209.106.128/25, 91.213.49.0/24, 91.220.224.0/24  ];

        if ! (net ~ allnet) then
                reject;

        accept;
}

protocol pipe pp_0007_as25441 {
        description "Pipe for AS25441 - Imagine - VLAN Interface 7";
        table master;
        mode transparent;
        peer table t_0007_as25441;
        import filter f_import_0007_as25441;
        export where ixp_community_filter(25441);
}

protocol bgp pb_0007_as25441 from tb_rsclient {
        description "RIB for AS25441 - Imagine - VLAN Interface 7";
        neighbor 10.2.0.46 as 25441;
        route limit 1000;
        table t_0007_as25441;
        password "LyJND4eoKuQz5j49";        
}

